# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Tests

permissions: {}

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup go
        uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.1.0
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
      - name: Run tests
        run: |
          set -e
          make tests
      - name: Upload coverage
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: coverage.out
          path: coverage.out
          retention-days: 1
          if-no-files-found: error

  upload-to-codecov:
    needs:
      - unit-tests
    runs-on: ubuntu-latest
    steps:
      - name: Download coverage
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: coverage.out
      - name: Upload Report to Codecov
        uses: codecov/codecov-action@b9fd7d16f6d7d1b5d2bec1a2887e65ceed900238 # v4.6.0
        with:
          files: ./coverage.out
          fail_ci_if_error: true
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  prepare-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup go
        uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.1.0
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
      - name: Save image archive
        shell: bash
        run: |
          set -e
          make ko-build
          make docker-save-image
      - name: Upload image archive
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: image.tar
          path: image.tar
          retention-days: 1
          if-no-files-found: error

  e2e-tests-chainsaw:
    runs-on: ubuntu-latest
    needs: [ prepare-images ]
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup go
        uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.1.0
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
      - name: Install helm
        id: helm
        uses: azure/setup-helm@fe7b79cd5ee1e45176fcad797de68ecaf3ca4814 # v4.2.0
      - name: Install cosign
        uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da # v3.7.0
      - name: Install chainsaw
        uses: kyverno/action-install-chainsaw@d311eacde764f806c9658574ff64c9c3b21f8397 # v0.2.11
        with:
          verify: true
      - name: Download image archive
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: image.tar
      - name: Create kind cluster
        uses: helm/kind-action@0025e74a8c7512023d06dc019c617aa3cf561fde # v1.10.0
        with:
          node_image: kindest/node:v1.29.2
          cluster_name: kind
      - name: Setup test environment
        run: |
          set -e
          export HELM=${{ steps.helm.outputs.helm-path }}
          make docker-load-image
          make install-cert-manager
          make install-cluster-issuer
          make install-kyverno-sidecar-injector
      - name: Run Chainsaw Tests
        run: chainsaw test tests/e2e-test
