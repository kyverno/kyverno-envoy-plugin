---
# Source: kyverno-http-authorizer-control-plane/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kyverno-http-authorizer-control-plane
  namespace: default
  labels:
    app.kubernetes.io/component: authz-server
    app.kubernetes.io/instance: test-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: test-release-kyverno-http-authorizer-control-plane
    app.kubernetes.io/version: 0.0.0
    helm.sh/chart: kyverno-http-authorizer-control-plane-0.0.0
---
# Source: kyverno-http-authorizer-control-plane/templates/validation-webhook/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kyverno-http-authorizer-control-plane-validation
  namespace: default
  labels:
    app.kubernetes.io/component: validation-webhook
    app.kubernetes.io/instance: test-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: test-release-kyverno-http-authorizer-control-plane
    app.kubernetes.io/version: 0.0.0
    helm.sh/chart: kyverno-http-authorizer-control-plane-0.0.0
---
# Source: kyverno-http-authorizer-control-plane/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kyverno-http-authorizer-control-plane
  labels:
    app.kubernetes.io/component: authz-server
    app.kubernetes.io/instance: test-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: test-release-kyverno-http-authorizer-control-plane
    app.kubernetes.io/version: 0.0.0
    helm.sh/chart: kyverno-http-authorizer-control-plane-0.0.0
rules:
- apiGroups:
  - envoy.kyverno.io
  resources:
  - authorizationpolicies
  - validatingpolicies
  verbs:
  - get
  - list
  - watch
---
# Source: kyverno-http-authorizer-control-plane/templates/cluster-role-binding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kyverno-http-authorizer-control-plane
  namespace: default
  labels:
    app.kubernetes.io/component: authz-server
    app.kubernetes.io/instance: test-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: test-release-kyverno-http-authorizer-control-plane
    app.kubernetes.io/version: 0.0.0
    helm.sh/chart: kyverno-http-authorizer-control-plane-0.0.0
roleRef:
  kind: ClusterRole
  name: kyverno-http-authorizer-control-plane
subjects:
  - kind: ServiceAccount
    name: kyverno-http-authorizer-control-plane
    namespace: default
---
# Source: kyverno-http-authorizer-control-plane/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kyverno-http-authorizer-control-plane
  namespace: default
  labels:
    app.kubernetes.io/component: authz-server
    app.kubernetes.io/instance: test-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: test-release-kyverno-http-authorizer-control-plane
    app.kubernetes.io/version: 0.0.0
    helm.sh/chart: kyverno-http-authorizer-control-plane-0.0.0
spec:
  type: ClusterIP
  ports:
  - name: grpc
    port: 9081
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: authz-server
    app.kubernetes.io/instance: test-release
    app.kubernetes.io/part-of: test-release-kyverno-http-authorizer-control-plane
---
# Source: kyverno-http-authorizer-control-plane/templates/validation-webhook/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kyverno-http-authorizer-control-plane-validation
  namespace: default
  labels:
    app.kubernetes.io/component: validation-webhook
    app.kubernetes.io/instance: test-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: test-release-kyverno-http-authorizer-control-plane
    app.kubernetes.io/version: 0.0.0
    helm.sh/chart: kyverno-http-authorizer-control-plane-0.0.0
spec:
  type: ClusterIP
  ports:
  - name: webhook
    port: 9443
    protocol: TCP
    targetPort: 9443
  selector:
    app.kubernetes.io/component: validation-webhook
    app.kubernetes.io/instance: test-release
    app.kubernetes.io/part-of: test-release-kyverno-http-authorizer-control-plane
---
# Source: kyverno-http-authorizer-control-plane/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kyverno-http-authorizer-control-plane
  namespace: default
  labels:
    app.kubernetes.io/component: authz-server
    app.kubernetes.io/instance: test-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: test-release-kyverno-http-authorizer-control-plane
    app.kubernetes.io/version: 0.0.0
    helm.sh/chart: kyverno-http-authorizer-control-plane-0.0.0
spec:
  replicas: 2
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 40%
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/component: authz-server
      app.kubernetes.io/instance: test-release
      app.kubernetes.io/part-of: test-release-kyverno-http-authorizer-control-plane
  template:
    metadata:
      labels:
        app.kubernetes.io/component: authz-server
        app.kubernetes.io/instance: test-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: test-release-kyverno-http-authorizer-control-plane
        app.kubernetes.io/version: 0.0.0
        helm.sh/chart: kyverno-http-authorizer-control-plane-0.0.0
    spec:
      dnsPolicy: ClusterFirst
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - admission-controller
              topologyKey: kubernetes.io/hostname
            weight: 1
      serviceAccountName: kyverno-http-authorizer-control-plane
      containers:
        - name: server
          image: ghcr.io/kyverno/kyverno-http-authorizer:v1.0.0
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: 384Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          startupProbe:
            failureThreshold: 20
            httpGet:
              path: /livez
              port: 9080
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 6
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /livez
              port: 9080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /readyz
              port: 9080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          ports:
            - containerPort: 9080
              name: http
              protocol: TCP
            - containerPort: 9081
              name: grpc
              protocol: TCP
          args:
            - serve
            - authz-server
            - --probes-address=:9080
            - --grpc-address=:9081
            - --metrics-address=:9082
---
# Source: kyverno-http-authorizer-control-plane/templates/validation-webhook/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kyverno-http-authorizer-control-plane-validation
  namespace: default
  labels:
    app.kubernetes.io/component: validation-webhook
    app.kubernetes.io/instance: test-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: test-release-kyverno-http-authorizer-control-plane
    app.kubernetes.io/version: 0.0.0
    helm.sh/chart: kyverno-http-authorizer-control-plane-0.0.0
spec:
  replicas: 2
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 40%
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/component: validation-webhook
      app.kubernetes.io/instance: test-release
      app.kubernetes.io/part-of: test-release-kyverno-http-authorizer-control-plane
  template:
    metadata:
      labels:
        app.kubernetes.io/component: validation-webhook
        app.kubernetes.io/instance: test-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: test-release-kyverno-http-authorizer-control-plane
        app.kubernetes.io/version: 0.0.0
        helm.sh/chart: kyverno-http-authorizer-control-plane-0.0.0
    spec:
      dnsPolicy: ClusterFirst
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - admission-controller
              topologyKey: kubernetes.io/hostname
            weight: 1
      serviceAccountName: kyverno-http-authorizer-control-plane-validation
      volumes:
        - name: certs
          secret:
            secretName: kyverno-http-authorizer-control-plane-validation
      containers:
        - name: server
          image: ghcr.io/kyverno/kyverno-http-authorizer:v1.0.0
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: 384Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          startupProbe:
            failureThreshold: 20
            httpGet:
              path: /livez
              port: 9080
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 6
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /livez
              port: 9080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /readyz
              port: 9080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          ports:
            - containerPort: 9080
              name: http
              protocol: TCP
            - containerPort: 9081
              name: grpc
              protocol: TCP
          args:
            - serve
            - validation-webhook
            - --probes-address=:9080
            - --metrics-address=:9082
          volumeMounts:
            - name: certs
              mountPath: /tmp/k8s-webhook-server/serving-certs
              readOnly: true
---
# Source: kyverno-http-authorizer-control-plane/templates/validation-webhook/validating-webhook-configuration.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: kyverno-http-authorizer-control-plane-validation
  labels:
    app.kubernetes.io/component: validation-webhook
    app.kubernetes.io/instance: test-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: test-release-kyverno-http-authorizer-control-plane
    app.kubernetes.io/version: 0.0.0
    helm.sh/chart: kyverno-http-authorizer-control-plane-0.0.0
webhooks:
- name: kyverno-http-authorizer-control-plane-validation-validatingpolicy.default.svc
  clientConfig:
    service:
      name: kyverno-http-authorizer-control-plane-validation
      namespace: default
      port: 9443
      path: /validate-policies-kyverno-io-v1alpha1-validatingpolicy
  failurePolicy: Fail
  sideEffects: None
  admissionReviewVersions: [ v1 ]
  rules:
  - apiGroups: [policies.kyverno.io]
    apiVersions: [v1alpha1]
    resources: [validatingpolicies]
    operations: [CREATE, UPDATE]
