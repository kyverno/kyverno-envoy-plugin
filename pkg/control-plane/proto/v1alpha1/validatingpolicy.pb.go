// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: validatingpolicy.proto

package v1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ValidatingPolicySpec defines the desired behavior of the ValidatingPolicy.
type ValidatingPolicySpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// CEL expressions for validation. At least one validation or audit annotation is required.
	Validations []*Validation `protobuf:"bytes,2,rep,name=validations,proto3" json:"validations,omitempty"`
	// How to handle policy failures. Defaults to Fail.
	FailurePolicy *string `protobuf:"bytes,3,opt,name=failure_policy,json=failurePolicy,proto3,oneof" json:"failure_policy,omitempty"`
	// Conditions that must be met for validation. Maximum 64 conditions.
	MatchConditions []*MatchCondition `protobuf:"bytes,5,rep,name=match_conditions,json=matchConditions,proto3" json:"match_conditions,omitempty"`
	// Variable definitions available in policy expressions (except MatchConditions).
	Variables []*Variable `protobuf:"bytes,6,rep,name=variables,proto3" json:"variables,omitempty"`
	// Actions to take when validation fails. Required.
	ValidationActions string `protobuf:"bytes,8,opt,name=validation_actions,json=validationActions,proto3" json:"validation_actions,omitempty"`
	// Evaluation mode for policy
	EvaluationMode string `protobuf:"bytes,9,opt,name=evaluation_mode,json=evaluationMode,proto3" json:"evaluation_mode,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ValidatingPolicySpec) Reset() {
	*x = ValidatingPolicySpec{}
	mi := &file_validatingpolicy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidatingPolicySpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatingPolicySpec) ProtoMessage() {}

func (x *ValidatingPolicySpec) ProtoReflect() protoreflect.Message {
	mi := &file_validatingpolicy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatingPolicySpec.ProtoReflect.Descriptor instead.
func (*ValidatingPolicySpec) Descriptor() ([]byte, []int) {
	return file_validatingpolicy_proto_rawDescGZIP(), []int{0}
}

func (x *ValidatingPolicySpec) GetValidations() []*Validation {
	if x != nil {
		return x.Validations
	}
	return nil
}

func (x *ValidatingPolicySpec) GetFailurePolicy() string {
	if x != nil && x.FailurePolicy != nil {
		return *x.FailurePolicy
	}
	return ""
}

func (x *ValidatingPolicySpec) GetMatchConditions() []*MatchCondition {
	if x != nil {
		return x.MatchConditions
	}
	return nil
}

func (x *ValidatingPolicySpec) GetVariables() []*Variable {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *ValidatingPolicySpec) GetValidationActions() string {
	if x != nil {
		return x.ValidationActions
	}
	return ""
}

func (x *ValidatingPolicySpec) GetEvaluationMode() string {
	if x != nil {
		return x.EvaluationMode
	}
	return ""
}

// Validation represents a validation rule
type Validation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// CEL expression to evaluate. See: https://github.com/google/cel-spec
	Expression string `protobuf:"bytes,1,opt,name=expression,proto3" json:"expression,omitempty"`
	// Failure message. Required if expression contains line breaks.
	Message *string `protobuf:"bytes,2,opt,name=message,proto3,oneof" json:"message,omitempty"`
	// Machine-readable failure reason. Must be valid HTTP error reason.
	Reason *string `protobuf:"bytes,3,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	// CEL expression for dynamic failure messages. Takes precedence over message.
	MessageExpression *string `protobuf:"bytes,4,opt,name=message_expression,json=messageExpression,proto3,oneof" json:"message_expression,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Validation) Reset() {
	*x = Validation{}
	mi := &file_validatingpolicy_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Validation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Validation) ProtoMessage() {}

func (x *Validation) ProtoReflect() protoreflect.Message {
	mi := &file_validatingpolicy_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Validation.ProtoReflect.Descriptor instead.
func (*Validation) Descriptor() ([]byte, []int) {
	return file_validatingpolicy_proto_rawDescGZIP(), []int{1}
}

func (x *Validation) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *Validation) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *Validation) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *Validation) GetMessageExpression() string {
	if x != nil && x.MessageExpression != nil {
		return *x.MessageExpression
	}
	return ""
}

// MatchCondition represents a condition that must be met for a request to be validated
type MatchCondition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Qualified identifier for the condition.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// CEL expression that must evaluate to bool.
	Expression    string `protobuf:"bytes,2,opt,name=expression,proto3" json:"expression,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchCondition) Reset() {
	*x = MatchCondition{}
	mi := &file_validatingpolicy_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchCondition) ProtoMessage() {}

func (x *MatchCondition) ProtoReflect() protoreflect.Message {
	mi := &file_validatingpolicy_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchCondition.ProtoReflect.Descriptor instead.
func (*MatchCondition) Descriptor() ([]byte, []int) {
	return file_validatingpolicy_proto_rawDescGZIP(), []int{2}
}

func (x *MatchCondition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MatchCondition) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

// Variable represents a variable definition
type Variable struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique CEL identifier. Accessible as `variables.{name}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// CEL expression defining the variable value.
	Expression    string `protobuf:"bytes,2,opt,name=expression,proto3" json:"expression,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Variable) Reset() {
	*x = Variable{}
	mi := &file_validatingpolicy_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Variable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Variable) ProtoMessage() {}

func (x *Variable) ProtoReflect() protoreflect.Message {
	mi := &file_validatingpolicy_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Variable.ProtoReflect.Descriptor instead.
func (*Variable) Descriptor() ([]byte, []int) {
	return file_validatingpolicy_proto_rawDescGZIP(), []int{3}
}

func (x *Variable) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Variable) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

// Request message for validating policy operations
type ValidatingPolicy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Delete        bool                   `protobuf:"varint,2,opt,name=delete,proto3" json:"delete,omitempty"`
	Spec          *ValidatingPolicySpec  `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidatingPolicy) Reset() {
	*x = ValidatingPolicy{}
	mi := &file_validatingpolicy_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidatingPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatingPolicy) ProtoMessage() {}

func (x *ValidatingPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_validatingpolicy_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatingPolicy.ProtoReflect.Descriptor instead.
func (*ValidatingPolicy) Descriptor() ([]byte, []int) {
	return file_validatingpolicy_proto_rawDescGZIP(), []int{4}
}

func (x *ValidatingPolicy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ValidatingPolicy) GetDelete() bool {
	if x != nil {
		return x.Delete
	}
	return false
}

func (x *ValidatingPolicy) GetSpec() *ValidatingPolicySpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type PolicyDiscoveryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientAddress string                 `protobuf:"bytes,1,opt,name=client_address,json=clientAddress,proto3" json:"client_address,omitempty"`
	// Last successfully applied version of the policies
	VersionInfo string `protobuf:"bytes,2,opt,name=version_info,json=versionInfo,proto3" json:"version_info,omitempty"`
	// Nonce from the last PolicyDiscoveryResponse
	ResponseNonce string       `protobuf:"bytes,3,opt,name=response_nonce,json=responseNonce,proto3" json:"response_nonce,omitempty"`
	ErrorDetail   *ErrorDetail `protobuf:"bytes,4,opt,name=error_detail,json=errorDetail,proto3" json:"error_detail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PolicyDiscoveryRequest) Reset() {
	*x = PolicyDiscoveryRequest{}
	mi := &file_validatingpolicy_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolicyDiscoveryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyDiscoveryRequest) ProtoMessage() {}

func (x *PolicyDiscoveryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_validatingpolicy_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyDiscoveryRequest.ProtoReflect.Descriptor instead.
func (*PolicyDiscoveryRequest) Descriptor() ([]byte, []int) {
	return file_validatingpolicy_proto_rawDescGZIP(), []int{5}
}

func (x *PolicyDiscoveryRequest) GetClientAddress() string {
	if x != nil {
		return x.ClientAddress
	}
	return ""
}

func (x *PolicyDiscoveryRequest) GetVersionInfo() string {
	if x != nil {
		return x.VersionInfo
	}
	return ""
}

func (x *PolicyDiscoveryRequest) GetResponseNonce() string {
	if x != nil {
		return x.ResponseNonce
	}
	return ""
}

func (x *PolicyDiscoveryRequest) GetErrorDetail() *ErrorDetail {
	if x != nil {
		return x.ErrorDetail
	}
	return nil
}

type ErrorDetail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorDetail) Reset() {
	*x = ErrorDetail{}
	mi := &file_validatingpolicy_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorDetail) ProtoMessage() {}

func (x *ErrorDetail) ProtoReflect() protoreflect.Message {
	mi := &file_validatingpolicy_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorDetail.ProtoReflect.Descriptor instead.
func (*ErrorDetail) Descriptor() ([]byte, []int) {
	return file_validatingpolicy_proto_rawDescGZIP(), []int{6}
}

func (x *ErrorDetail) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PolicyDiscoveryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VersionInfo   string                 `protobuf:"bytes,1,opt,name=version_info,json=versionInfo,proto3" json:"version_info,omitempty"` // Hash of all the policies
	Policies      []*ValidatingPolicy    `protobuf:"bytes,2,rep,name=policies,proto3" json:"policies,omitempty"`
	Nonce         string                 `protobuf:"bytes,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PolicyDiscoveryResponse) Reset() {
	*x = PolicyDiscoveryResponse{}
	mi := &file_validatingpolicy_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolicyDiscoveryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyDiscoveryResponse) ProtoMessage() {}

func (x *PolicyDiscoveryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_validatingpolicy_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyDiscoveryResponse.ProtoReflect.Descriptor instead.
func (*PolicyDiscoveryResponse) Descriptor() ([]byte, []int) {
	return file_validatingpolicy_proto_rawDescGZIP(), []int{7}
}

func (x *PolicyDiscoveryResponse) GetVersionInfo() string {
	if x != nil {
		return x.VersionInfo
	}
	return ""
}

func (x *PolicyDiscoveryResponse) GetPolicies() []*ValidatingPolicy {
	if x != nil {
		return x.Policies
	}
	return nil
}

func (x *PolicyDiscoveryResponse) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientAddress string                 `protobuf:"bytes,1,opt,name=client_address,json=clientAddress,proto3" json:"client_address,omitempty"`
	Time          *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_validatingpolicy_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_validatingpolicy_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_validatingpolicy_proto_rawDescGZIP(), []int{8}
}

func (x *HealthCheckRequest) GetClientAddress() string {
	if x != nil {
		return x.ClientAddress
	}
	return ""
}

func (x *HealthCheckRequest) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_validatingpolicy_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_validatingpolicy_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_validatingpolicy_proto_rawDescGZIP(), []int{9}
}

var File_validatingpolicy_proto protoreflect.FileDescriptor

const file_validatingpolicy_proto_rawDesc = "" +
	"\n" +
	"\x16validatingpolicy.proto\x12\x15kyverno.http.v1alpha1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x83\x03\n" +
	"\x14ValidatingPolicySpec\x12C\n" +
	"\vvalidations\x18\x02 \x03(\v2!.kyverno.http.v1alpha1.ValidationR\vvalidations\x12*\n" +
	"\x0efailure_policy\x18\x03 \x01(\tH\x00R\rfailurePolicy\x88\x01\x01\x12P\n" +
	"\x10match_conditions\x18\x05 \x03(\v2%.kyverno.http.v1alpha1.MatchConditionR\x0fmatchConditions\x12=\n" +
	"\tvariables\x18\x06 \x03(\v2\x1f.kyverno.http.v1alpha1.VariableR\tvariables\x12-\n" +
	"\x12validation_actions\x18\b \x01(\tR\x11validationActions\x12'\n" +
	"\x0fevaluation_mode\x18\t \x01(\tR\x0eevaluationModeB\x11\n" +
	"\x0f_failure_policy\"\xca\x01\n" +
	"\n" +
	"Validation\x12\x1e\n" +
	"\n" +
	"expression\x18\x01 \x01(\tR\n" +
	"expression\x12\x1d\n" +
	"\amessage\x18\x02 \x01(\tH\x00R\amessage\x88\x01\x01\x12\x1b\n" +
	"\x06reason\x18\x03 \x01(\tH\x01R\x06reason\x88\x01\x01\x122\n" +
	"\x12message_expression\x18\x04 \x01(\tH\x02R\x11messageExpression\x88\x01\x01B\n" +
	"\n" +
	"\b_messageB\t\n" +
	"\a_reasonB\x15\n" +
	"\x13_message_expression\"D\n" +
	"\x0eMatchCondition\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1e\n" +
	"\n" +
	"expression\x18\x02 \x01(\tR\n" +
	"expression\">\n" +
	"\bVariable\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1e\n" +
	"\n" +
	"expression\x18\x02 \x01(\tR\n" +
	"expression\"\x7f\n" +
	"\x10ValidatingPolicy\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06delete\x18\x02 \x01(\bR\x06delete\x12?\n" +
	"\x04spec\x18\x03 \x01(\v2+.kyverno.http.v1alpha1.ValidatingPolicySpecR\x04spec\"\xd0\x01\n" +
	"\x16PolicyDiscoveryRequest\x12%\n" +
	"\x0eclient_address\x18\x01 \x01(\tR\rclientAddress\x12!\n" +
	"\fversion_info\x18\x02 \x01(\tR\vversionInfo\x12%\n" +
	"\x0eresponse_nonce\x18\x03 \x01(\tR\rresponseNonce\x12E\n" +
	"\ferror_detail\x18\x04 \x01(\v2\".kyverno.http.v1alpha1.ErrorDetailR\verrorDetail\"'\n" +
	"\vErrorDetail\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\x97\x01\n" +
	"\x17PolicyDiscoveryResponse\x12!\n" +
	"\fversion_info\x18\x01 \x01(\tR\vversionInfo\x12C\n" +
	"\bpolicies\x18\x02 \x03(\v2'.kyverno.http.v1alpha1.ValidatingPolicyR\bpolicies\x12\x14\n" +
	"\x05nonce\x18\x03 \x01(\tR\x05nonce\"k\n" +
	"\x12HealthCheckRequest\x12%\n" +
	"\x0eclient_address\x18\x01 \x01(\tR\rclientAddress\x12.\n" +
	"\x04time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\"\x15\n" +
	"\x13HealthCheckResponse2\xfb\x01\n" +
	"\x17ValidatingPolicyService\x12z\n" +
	"\x15PolicyDiscoveryStream\x12-.kyverno.http.v1alpha1.PolicyDiscoveryRequest\x1a..kyverno.http.v1alpha1.PolicyDiscoveryResponse(\x010\x01\x12d\n" +
	"\vHealthCheck\x12).kyverno.http.v1alpha1.HealthCheckRequest\x1a*.kyverno.http.v1alpha1.HealthCheckResponseB=Z;github.com/kyverno/kyverno-envoy-plugin/apis/proto/v1alpha1b\x06proto3"

var (
	file_validatingpolicy_proto_rawDescOnce sync.Once
	file_validatingpolicy_proto_rawDescData []byte
)

func file_validatingpolicy_proto_rawDescGZIP() []byte {
	file_validatingpolicy_proto_rawDescOnce.Do(func() {
		file_validatingpolicy_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_validatingpolicy_proto_rawDesc), len(file_validatingpolicy_proto_rawDesc)))
	})
	return file_validatingpolicy_proto_rawDescData
}

var file_validatingpolicy_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_validatingpolicy_proto_goTypes = []any{
	(*ValidatingPolicySpec)(nil),    // 0: kyverno.http.v1alpha1.ValidatingPolicySpec
	(*Validation)(nil),              // 1: kyverno.http.v1alpha1.Validation
	(*MatchCondition)(nil),          // 2: kyverno.http.v1alpha1.MatchCondition
	(*Variable)(nil),                // 3: kyverno.http.v1alpha1.Variable
	(*ValidatingPolicy)(nil),        // 4: kyverno.http.v1alpha1.ValidatingPolicy
	(*PolicyDiscoveryRequest)(nil),  // 5: kyverno.http.v1alpha1.PolicyDiscoveryRequest
	(*ErrorDetail)(nil),             // 6: kyverno.http.v1alpha1.ErrorDetail
	(*PolicyDiscoveryResponse)(nil), // 7: kyverno.http.v1alpha1.PolicyDiscoveryResponse
	(*HealthCheckRequest)(nil),      // 8: kyverno.http.v1alpha1.HealthCheckRequest
	(*HealthCheckResponse)(nil),     // 9: kyverno.http.v1alpha1.HealthCheckResponse
	(*timestamppb.Timestamp)(nil),   // 10: google.protobuf.Timestamp
}
var file_validatingpolicy_proto_depIdxs = []int32{
	1,  // 0: kyverno.http.v1alpha1.ValidatingPolicySpec.validations:type_name -> kyverno.http.v1alpha1.Validation
	2,  // 1: kyverno.http.v1alpha1.ValidatingPolicySpec.match_conditions:type_name -> kyverno.http.v1alpha1.MatchCondition
	3,  // 2: kyverno.http.v1alpha1.ValidatingPolicySpec.variables:type_name -> kyverno.http.v1alpha1.Variable
	0,  // 3: kyverno.http.v1alpha1.ValidatingPolicy.spec:type_name -> kyverno.http.v1alpha1.ValidatingPolicySpec
	6,  // 4: kyverno.http.v1alpha1.PolicyDiscoveryRequest.error_detail:type_name -> kyverno.http.v1alpha1.ErrorDetail
	4,  // 5: kyverno.http.v1alpha1.PolicyDiscoveryResponse.policies:type_name -> kyverno.http.v1alpha1.ValidatingPolicy
	10, // 6: kyverno.http.v1alpha1.HealthCheckRequest.time:type_name -> google.protobuf.Timestamp
	5,  // 7: kyverno.http.v1alpha1.ValidatingPolicyService.PolicyDiscoveryStream:input_type -> kyverno.http.v1alpha1.PolicyDiscoveryRequest
	8,  // 8: kyverno.http.v1alpha1.ValidatingPolicyService.HealthCheck:input_type -> kyverno.http.v1alpha1.HealthCheckRequest
	7,  // 9: kyverno.http.v1alpha1.ValidatingPolicyService.PolicyDiscoveryStream:output_type -> kyverno.http.v1alpha1.PolicyDiscoveryResponse
	9,  // 10: kyverno.http.v1alpha1.ValidatingPolicyService.HealthCheck:output_type -> kyverno.http.v1alpha1.HealthCheckResponse
	9,  // [9:11] is the sub-list for method output_type
	7,  // [7:9] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_validatingpolicy_proto_init() }
func file_validatingpolicy_proto_init() {
	if File_validatingpolicy_proto != nil {
		return
	}
	file_validatingpolicy_proto_msgTypes[0].OneofWrappers = []any{}
	file_validatingpolicy_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_validatingpolicy_proto_rawDesc), len(file_validatingpolicy_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_validatingpolicy_proto_goTypes,
		DependencyIndexes: file_validatingpolicy_proto_depIdxs,
		MessageInfos:      file_validatingpolicy_proto_msgTypes,
	}.Build()
	File_validatingpolicy_proto = out.File
	file_validatingpolicy_proto_goTypes = nil
	file_validatingpolicy_proto_depIdxs = nil
}
